postgresql {
	user       = "YOURUSER"
	passphrase = "YOURPASSWORD"
	address    = "YOURADDRESS"
	poolsize   = 3
}

queries {
	simpleSelect = " SELECT publickeys.* FROM publickeys ORDER BY agent ASC LIMIT 5 OFFSET 0 "

	recreate = """ 
		CREATE TABLE IF NOT EXISTS publickeys(
			agent UUID NOT NULL, 
			publickey TEXT NOT NULL,
			confidence SMALLINT NOT NULL, 
			start TIMESTAMP NOT NULL, 
			stop TIMESTAMP, 
			update TIMESTAMP NOT NULL, 
			hash UUID NULL
		); 
		CREATE UNIQUE INDEX IF NOT EXISTS 
			publickeys_closed_idx 
			ON publickeys (agent, start, stop) 
			WHERE stop IS NOT NULL; 
		CREATE UNIQUE INDEX IF NOT EXISTS p
			ublickeys_open_idx 
			ON publickeys (agent,start,stop) 
			WHERE stop IS NULL;
		CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
		INSERT INTO publickeys(
				agent, 
				publickey, 
				start, 
				stop, 
				update, 
				hash, 
				confidence
			) VALUES(
				uuid_generate_v4(),
				'public key to some encoded communication channel',
				'yesterday',
				'infinity',
				'now',
				md5('this is supposed to be a concatenation of column values')::uuid,
				trunc(random() * 75 + 1 )
			) ON CONFLICT DO NOTHING
		"""

	firstInsert = """ 
		INSERT INTO publickeys(
			agent, publickey, start, stop, update, hash, confidence
		) VALUES(
			uuid_generate_v4(),
			'public key to some encoded communication channel',
			'yesterday',
			'infinity',
			'now',
			md5('this is supposed to be a hash')::uuid,
			trunc(random() * 75 + 1 )
		) ON CONFLICT DO NOTHING;  
		"""
}
